<Styles
  xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:assists="clr-namespace:Material.Styles.Assists"
  xmlns:ripple="clr-namespace:Material.Ripple;assembly=Material.Ripple"
  xmlns:system="clr-namespace:System;assembly=netstandard">
  <Styles.Resources>
    <system:Double x:Key="ButtonHoveredOpacity">0.12</system:Double>
    <system:Double x:Key="ButtonDisabledOpacity">0.38</system:Double>
    <system:Double x:Key="ButtonPressedOpacity">0.26</system:Double>
  </Styles.Resources>

  <Style Selector="Button, ToggleButton">
    <Setter Property="CornerRadius" Value="4"/>
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Padding" Value="16 8" />
    <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth1" />
    <Setter Property="assists:ButtonAssist.HoverColor" Value="{Binding Foreground,
                      Converter={StaticResource BrushRoundConverter}, RelativeSource={RelativeSource Self}}"/>
    <Setter Property="assists:ButtonAssist.ClickFeedbackColor" Value="#000000"/>
    <Setter Property="TextBlock.FontWeight" Value="Medium" />
    <Setter Property="TextBlock.FontSize" Value="14" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="ClipToBounds" Value="False" />
    <Setter Property="Template">
      <ControlTemplate>
        <Border Name="PART_ButtonRootBorder"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding CornerRadius}"
                assists:ShadowAssist.ShadowDepth="{TemplateBinding assists:ShadowAssist.ShadowDepth}">
          <Panel>
            <Border Name="PART_HoverIndicator" BorderThickness="0"
                    Background="{TemplateBinding assists:ButtonAssist.HoverColor}"
                    CornerRadius="{TemplateBinding CornerRadius}"/>
            <Border CornerRadius="{TemplateBinding CornerRadius}"
                    ClipToBounds="True">
              <ripple:RippleEffect RippleFill="{TemplateBinding assists:ButtonAssist.ClickFeedbackColor}"
                                   RippleOpacity="{StaticResource ButtonPressedOpacity}">
                <ContentPresenter Name="PART_ContentPresenter"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Padding="{TemplateBinding Padding}"
                                  TextBlock.Foreground="{TemplateBinding Foreground}"
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
              </ripple:RippleEffect>
            </Border>
          </Panel>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style>
  
  <!-- Transitions -->
  
  <Style Selector="Button:not(.notransitions) /template/ Border#PART_HoverIndicator">
    <Setter Property="Transitions">
      <Transitions>
        <DoubleTransition Duration="0:0:0.25" Property="Opacity" Easing="LinearEasing"/>
      </Transitions>
    </Setter>
  </Style>
  
  <Style Selector="ToggleButton:not(.notransitions) /template/ Border#PART_HoverIndicator">
    <Setter Property="Transitions">
      <Transitions>
        <DoubleTransition Duration="0:0:0.25" Property="Opacity" Easing="LinearEasing"/>
      </Transitions>
    </Setter>
  </Style>
  
  <!-- Default state -->
  
  <Style Selector="Button /template/ Border#PART_HoverIndicator, ToggleButton /template/ Border#PART_HoverIndicator">
    <Setter Property="Opacity" Value="0" />
  </Style>
    
  <Style Selector="Button:disabled:not(.no-material),ToggleButton:disabled:not(.no-material)">
    <Setter Property="Opacity" Value="{StaticResource ButtonDisabledOpacity}" />
  </Style>
  
  <!-- Feedbacks -->
  
  <Style Selector="Button:not(.disabled):pointerover /template/ Border#PART_HoverIndicator, 
                   ToggleButton:not(.disabled):pointerover /template/ Border#PART_HoverIndicator">
    <Setter Property="Opacity" Value="{StaticResource ButtonHoveredOpacity}" />
  </Style>

  <Style
      Selector="Button:pointerover:not(.no-material) /template/ Border#PART_ButtonRootBorder,
  ToggleButton:pointerover:not(.no-material) /template/ Border#PART_ButtonRootBorder">
    <Setter Property="assists:ShadowAssist.Darken" Value="True" />
  </Style>

  <Style Selector="Button.Flat, ToggleButton.Flat">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
    <Setter Property="Padding" Value="16 6" />
    <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth0"/>
    <Setter Property="assists:ButtonAssist.HoverColor" Value="{DynamicResource MaterialDesignBody}"/>
    <Setter Property="assists:ButtonAssist.ClickFeedbackColor" Value="{Binding $self.Foreground}"/>
  </Style>

  <Style Selector="Button.Icon, ToggleButton.Icon">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
    <Setter Property="Padding" Value="16 16 16 16" />
    <Setter Property="Height" Value="48" />
    <Setter Property="Width" Value="48" />
    <Setter Property="Template">
      <ControlTemplate>
        <Grid>
          <Ellipse Name="PART_HoverIndicator"
                   Width="{TemplateBinding Width}" 
                   Height="{TemplateBinding Height}" Margin="-100"
                   VerticalAlignment="Center" HorizontalAlignment="Center"
                   Fill="{TemplateBinding Foreground}"
                   IsHitTestVisible="False"/>
          <Border Width="{TemplateBinding Width}"
                  Height="{TemplateBinding Height}"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center"
                  ClipToBounds="True" CornerRadius="1000000">
            <ripple:RippleEffect RippleFill="{DynamicResource MaterialDesignFlatButtonRipple}"
                                 RippleOpacity="{StaticResource ButtonPressedOpacity}">
              <ContentPresenter Name="PART_ContentPresenter"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                Margin="{TemplateBinding Padding}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            </ripple:RippleEffect>
          </Border>
        </Grid>
      </ControlTemplate>
    </Setter>
  </Style>
  
  <!-- Transitions -->
  
  <Style Selector="Button.Icon:not(.notransitions) /template/ Ellipse#PART_HoverIndicator">
    <Setter Property="Transitions">
      <Transitions>
        <DoubleTransition Duration="0:0:0.25" Property="Opacity" Easing="LinearEasing"/>
      </Transitions>
    </Setter>
  </Style>  
  
  <Style Selector="ToggleButton.Icon:not(.notransitions) /template/ Ellipse#PART_HoverIndicator">
    <Setter Property="Transitions">
      <Transitions>
        <DoubleTransition Duration="0:0:0.25" Property="Opacity" Easing="LinearEasing"/>
      </Transitions>
    </Setter>
  </Style>  
  
  <!-- Default state -->
  
  <Style Selector="Button.DrawerItem, ToggleButton.DrawerItem">
    <Setter Property="Height" Value="48"/>
  </Style>

  <!-- Feedbacks -->

  <Style Selector="Button.Icon /template/ Ellipse#PART_HoverIndicator,
                   ToggleButton.Icon /template/ Ellipse#PART_HoverIndicator">
    <Setter Property="Opacity" Value="0" />
  </Style>
  
  <Style Selector="Button.Flat:not(.disabled):pointerover /template/ Border#PART_HoverIndicator, 
                   ToggleButton.Flat:not(.disabled):pointerover /template/ Border#PART_HoverIndicator">
    <Setter Property="Opacity" Value="{StaticResource ButtonHoveredOpacity}" />
  </Style>
  
  <Style Selector="Button.Icon:not(:disabled):pointerover /template/ Ellipse#PART_HoverIndicator,
                   ToggleButton.Icon:not(:disabled):pointerover /template/ Ellipse#PART_HoverIndicator">
    <Setter Property="Opacity" Value="{StaticResource ButtonHoveredOpacity}" />
  </Style>
  
  <Style Selector="Button.Light:not(.Outline), ToggleButton.Light:not(.Outline)">
    <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}"/>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
  </Style>
  <Style Selector="Button.Dark:not(.Outline), ToggleButton.Dark:not(.Outline)">
    <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}"/>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
  </Style>
  <Style Selector="Button.Accent:not(.Outline), ToggleButton.Accent:not(.Outline)">
    <Setter Property="Background" Value="{DynamicResource SecondaryHueMidBrush}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueMidBrush}"/>
    <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidForegroundBrush}"/>
  </Style>

  <Style Selector="Button.Accent.Flat:not(.Outline), ToggleButton.Accent.Flat:not(.Outline)">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
  </Style>
  
  <!-- Outlined buttons -->

  <Style Selector="Button.Outline, ToggleButton.Outline">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
    <Setter Property="Padding" Value="16 6" />
    <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth0" />
  </Style>

  <Style Selector="Button.Outline.Accent, ToggleButton.Outline.Accent">
    <Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueMidBrush}"/>
    <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
  </Style>
  
  <Style Selector="Button.Outline.Light, ToggleButton.Outline.Light">
    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}"/>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightBrush}"/>
  </Style>
  <Style Selector="Button.Outline.Dark, ToggleButton.Outline.Dark">
    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}"/>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}"/>
  </Style>
</Styles>


<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ripple="clr-namespace:Material.Ripple;assembly=Material.Ripple"
                    xmlns:assists="clr-namespace:Material.Styles.Assists"
                    xmlns:system="clr-namespace:System;assembly=netstandard"
                    xmlns:converters="clr-namespace:Material.Styles.Converters">
  <system:Double x:Key="ButtonHoveredOpacity">0.12</system:Double>
  <system:Double x:Key="ButtonDisabledOpacity">0.38</system:Double>
  <system:Double x:Key="ButtonPressedOpacity">0.26</system:Double>
  <converters:BrushRoundConverter x:Key="BrushRoundConverter" />

  <ControlTheme x:Key="MaterialButtonBase" TargetType="Button">
    <Setter Property="CornerRadius" Value="4" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Padding" Value="16 8" />
    <Setter Property="assists:ButtonAssist.HoverColor"
            Value="{Binding $self.Foreground, Converter={StaticResource BrushRoundConverter}}" />
    <Setter Property="assists:ButtonAssist.ClickFeedbackColor" Value="{Binding $self.Foreground}" />
    <Setter Property="TextBlock.FontWeight" Value="Medium" />
    <Setter Property="TextBlock.FontSize" Value="14" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="ClipToBounds" Value="False" />
    <Setter Property="Template">
      <ControlTemplate>
        <Border Name="PART_RootBorder"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding CornerRadius}"
                assists:ShadowAssist.ShadowDepth="{TemplateBinding assists:ShadowAssist.ShadowDepth}">
          <Panel Name="PART_RootPanel">
            <Border Name="PART_HoverEffect"
                    Background="{TemplateBinding assists:ButtonAssist.HoverColor}"
                    CornerRadius="{TemplateBinding CornerRadius}" />
            <Border CornerRadius="{TemplateBinding CornerRadius}"
                    ClipToBounds="True">
              <ripple:RippleEffect Name="PART_Ripple"
                                   RippleFill="{TemplateBinding assists:ButtonAssist.ClickFeedbackColor}"
                                   RippleOpacity="{StaticResource ButtonPressedOpacity}">
                <ContentPresenter Name="PART_ContentPresenter"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Padding="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
              </ripple:RippleEffect>
            </Border>
          </Panel>
        </Border>
      </ControlTemplate>
    </Setter>

    <!-- Transitions -->

    <Style Selector="^:not(.no-transitions) /template/ Border#PART_RootBorder">
      <Setter Property="Transitions">
        <Transitions>
          <DoubleTransition Duration="0.1" Property="Opacity" Easing="CircularEaseOut" />
          <BrushTransition Duration="0.25" Property="Background" Easing="CircularEaseOut" />
          <BrushTransition Duration="0.25" Property="BorderBrush" Easing="CircularEaseOut" />
        </Transitions>
      </Setter>
    </Style>

    <Style Selector="^:not(.no-transitions) /template/ Border#PART_HoverEffect">
      <Setter Property="Transitions">
        <Transitions>
          <DoubleTransition Duration="0:0:0.25" Property="Opacity" Easing="LinearEasing" />
        </Transitions>
      </Setter>
    </Style>

    <!-- Colour variants -->

    <Style Selector="^.light">
      <Setter Property="Background" Value="{DynamicResource MaterialPrimaryLightBrush}" />
      <Setter Property="BorderBrush" Value="{DynamicResource MaterialPrimaryLightBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource MaterialPrimaryLightForegroundBrush}" />
    </Style>

    <Style Selector="^.dark">
      <Setter Property="Background" Value="{DynamicResource MaterialPrimaryDarkBrush}" />
      <Setter Property="BorderBrush" Value="{DynamicResource MaterialPrimaryDarkBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource MaterialPrimaryForegroundBrush}" />
    </Style>

    <Style Selector="^.accent">
      <Setter Property="Background" Value="{DynamicResource MaterialSecondaryMidBrush}" />
      <Setter Property="BorderBrush" Value="{DynamicResource MaterialSecondaryMidBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource MaterialSecondaryMidForegroundBrush}" />
    </Style>

    <!-- Default state -->

    <Style Selector="^ /template/ Border#PART_HoverEffect">
      <Setter Property="Opacity" Value="0" />
      <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style Selector="^:not(:disabled):pointerover /template/ Border#PART_HoverEffect">
      <Setter Property="Opacity" Value="{StaticResource ButtonHoveredOpacity}" />
    </Style>

    <Style Selector="^:focused /template/ Border#PART_HoverEffect">
      <Setter Property="Opacity" Value="0.24" />
    </Style>

    <Style Selector="^:pointerover /template/ Border#PART_RootBorder">
      <Setter Property="assists:ShadowAssist.Darken" Value="True" />
    </Style>

    <Style Selector="^:disabled /template/ Border#PART_RootBorder">
      <Setter Property="Opacity" Value="{StaticResource ButtonDisabledOpacity}" />
    </Style>
  </ControlTheme>

  <ControlTheme x:Key="MaterialButton" TargetType="Button"
                BasedOn="{StaticResource MaterialButtonBase}">
    <Setter Property="Background" Value="{DynamicResource MaterialPrimaryMidBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MaterialPrimaryMidBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource MaterialPrimaryMidForegroundBrush}" />
    <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth1" />

    <Style Selector="^.light">
      <Setter Property="Background" Value="{DynamicResource MaterialPrimaryLightBrush}" />
      <Setter Property="BorderBrush" Value="{DynamicResource MaterialPrimaryLightBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource MaterialPrimaryLightForegroundBrush}" />
    </Style>

    <Style Selector="^.dark">
      <Setter Property="Background" Value="{DynamicResource MaterialPrimaryDarkBrush}" />
      <Setter Property="BorderBrush" Value="{DynamicResource MaterialPrimaryDarkBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource MaterialPrimaryForegroundBrush}" />
    </Style>

    <Style Selector="^.accent">
      <Setter Property="Background" Value="{DynamicResource MaterialSecondaryMidBrush}" />
      <Setter Property="BorderBrush" Value="{DynamicResource MaterialSecondaryMidBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource MaterialSecondaryMidForegroundBrush}" />
    </Style>
  </ControlTheme>

  <ControlTheme x:Key="{x:Type Button}" TargetType="Button"
                BasedOn="{StaticResource MaterialButton}" />

  <ControlTheme x:Key="MaterialOutlineButton"
                BasedOn="{StaticResource MaterialButtonBase}"
                TargetType="Button">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="{DynamicResource MaterialPrimaryMidBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource MaterialPrimaryMidBrush}" />
    <Setter Property="Padding" Value="16 6" />
    <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth0" />

    <!-- Colour variants -->

    <Style Selector="^.accent">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="{DynamicResource MaterialSecondaryMidBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource MaterialSecondaryMidBrush}" />
    </Style>

    <Style Selector="^.light">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="{DynamicResource MaterialPrimaryLightBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource MaterialPrimaryLightBrush}" />
    </Style>

    <Style Selector="^.dark">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="{DynamicResource MaterialPrimaryDarkBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource MaterialPrimaryDarkBrush}" />
    </Style>


    <Style Selector="^:disabled">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="{DynamicResource MaterialBodyBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource MaterialBodyBrush}" />
    </Style>
  </ControlTheme>

  <ControlTheme x:Key="MaterialFlatButton"
                BasedOn="{StaticResource MaterialButtonBase}"
                TargetType="Button">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Padding" Value="16 6" />
    <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth0" />
    <Setter Property="assists:ButtonAssist.HoverColor" Value="{DynamicResource MaterialBodyBrush}" />
    <Setter Property="assists:ButtonAssist.ClickFeedbackColor" Value="{Binding $self.Foreground}" />

    <!-- Colour variants -->

    <Style Selector="^.primary">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
      <Setter Property="Foreground" Value="{DynamicResource MaterialPrimaryMidBrush}" />
    </Style>

    <Style Selector="^.accent">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
      <Setter Property="Foreground" Value="{DynamicResource MaterialSecondaryMidBrush}" />
    </Style>


    <Style Selector="^:disabled">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="{DynamicResource MaterialBodyBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource MaterialBodyBrush}" />
    </Style>
  </ControlTheme>

  <ControlTheme x:Key="MaterialIconButton"
                BasedOn="{StaticResource MaterialButton}"
                TargetType="Button">

    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Foreground" Value="{DynamicResource MaterialPrimaryMidBrush}" />
    <Setter Property="Padding" Value="12" />
    <Setter Property="Height" Value="32" />
    <Setter Property="Width" Value="32" />
    <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth0" />
    <Setter Property="CornerRadius" Value="100000" />

    <!-- Colour variants -->

    <Style Selector="^.accent">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
      <Setter Property="Foreground" Value="{DynamicResource MaterialSecondaryMidBrush}" />
    </Style>

    <Style Selector="^:disabled">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="{DynamicResource MaterialBodyBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource MaterialBodyBrush}" />
    </Style>
  </ControlTheme>
</ResourceDictionary>
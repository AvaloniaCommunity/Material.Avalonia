<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ripple="clr-namespace:Material.Ripple;assembly=Material.Ripple"
                    xmlns:controls="clr-namespace:Material.Styles.Controls"
                    xmlns:system="clr-namespace:System;assembly=netstandard"
                    xmlns:converters="clr-namespace:Avalonia.Controls.Converters;assembly=Avalonia.Controls">
  <Design.PreviewWith>
    <Border Padding="20" Width="320">
      <StackPanel Spacing="20" HorizontalAlignment="Left">
        <MenuItem Header="_Standard" />
        <MenuItem IsSelected="True" Header="Selected" />
        <MenuItem Header="With Icon">
          <MenuItem.Icon>
            <TextBlock>ðŸ˜Š</TextBlock>
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="With CheckBox">
          <MenuItem.Icon>
            <CheckBox IsChecked="True" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Input Gesture" InputGesture="Ctrl+G" />
        <MenuItem Header="Disabled" IsEnabled="False" />
        <MenuItem Header="-" />
        <MenuItem Header="Parent" IsSubMenuOpen="True">
          <MenuItem Header="Child 1" />
          <MenuItem Header="Child 2" />
          <MenuItem Header="Child 3" />
          <Separator />
          <MenuItem Header="Child 4" />
          <MenuItem Header="Child 5" />
          <MenuItem Header="Child 6" />
          <MenuItem Header="Child 7" />
          <MenuItem Header="Child 8" />
          <MenuItem Header="Child 9" />
          <MenuItem Header="Child 10" />
          <MenuItem Header="Child 11" />
          <MenuItem Header="Child 12" />
          <MenuItem Header="Child 13" />
          <MenuItem Header="Child 14" />
          <MenuItem Header="Child 15" />
          <MenuItem Header="Child 16" />
          <MenuItem Header="Child 17" />
          <MenuItem Header="Child 18" />
          <MenuItem Header="Child 19" />
        </MenuItem>
        <MenuItem Header="Disabled Parent" IsEnabled="False">
          <MenuItem Header="Child" />
        </MenuItem>
      </StackPanel>
    </Border>
  </Design.PreviewWith>
  
  <converters:PlatformKeyGestureConverter x:Key="KeyGestureConverter" />
  
  <ControlTheme x:Key="MaterialMenuItemStringAccessText" TargetType="AccessText"
                BasedOn="{StaticResource MaterialAccessText}">
    <Setter Property="FontSize" Value="16" />
    <Setter Property="FontWeight" Value="Regular" />
  </ControlTheme>

  <ControlTheme x:Key="MaterialMenuItem" TargetType="MenuItem">
    <Setter Property="Height" Value="48" />
    <Setter Property="MinWidth" Value="112" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="Foreground" Value="{DynamicResource MaterialBodyBrush}" />
    <Setter Property="Template">
      <ControlTemplate>
        <Border Name="PART_MenuItemRootBorder" Height="{TemplateBinding Height}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
          <Panel>
            <Border Name="PART_MenuItemHighlighter"
                    Background="{DynamicResource MaterialBodyBrush}" />
            <ripple:RippleEffect Name="PART_Ripple"
                                 RippleFill="{DynamicResource MaterialFlatButtonRippleBrush}">
              <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="16" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGT" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                  <ContentPresenter Name="PART_Icon"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"

                                    IsVisible="{TemplateBinding Icon, Converter={x:Static ObjectConverters.IsNotNull}}"
                                    Content="{TemplateBinding Icon}" />
                  <ContentPresenter Name="PART_HeaderPresenter"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Header}">
                    <ContentPresenter.DataTemplates>
                      <DataTemplate DataType="system:String">
                        <AccessText Name="PART_MenuItemText"
                                    Text="{Binding }"
                                    Theme="{StaticResource MaterialMenuItemStringAccessText}">
                        </AccessText>
                      </DataTemplate>
                    </ContentPresenter.DataTemplates>
                  </ContentPresenter>
                </StackPanel>

                <TextBlock Name="PART_InputGestureText"
                           Margin="24, 0, 0, 0"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGesture, Converter={StaticResource KeyGestureConverter}}"
                           VerticalAlignment="Center" />

                <Path Grid.Column="0" Name="check"
                      Fill="{TemplateBinding Foreground}"
                      Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                      IsVisible="False"
                      Margin="4"
                      VerticalAlignment="Center" />

                <Path Name="PART_RightArrow"
                      Data="M0,0L4,3.5 0,7z"
                      Margin="10,0,0,0"
                      Fill="{TemplateBinding Foreground}"
                      VerticalAlignment="Center"
                      Grid.Column="3" />
                <Popup Grid.Column="0" Name="PART_Popup"
                       Placement="Right"
                       IsLightDismissEnabled="False"
                       IsOpen="{TemplateBinding IsSubMenuOpen, Mode=TwoWay}">
                  <controls:Card Padding="0">
                    <Border Name="PART_MainBorder"
                            BorderThickness="{TemplateBinding BorderThickness}">
                      <ScrollViewer>
                        <ItemsPresenter Name="PART_ItemsPresenter"
                                        ItemsPanel="{TemplateBinding ItemsPanel}"
                                        Margin="0 8" />
                      </ScrollViewer>
                    </Border>
                  </controls:Card>
                </Popup>
              </Grid>
            </ripple:RippleEffect>
          </Panel>
        </Border>
      </ControlTemplate>
    </Setter>

    <Style Selector="^ /template/ ContentPresenter#PART_Icon">
      <Setter Property="Width" Value="24" />
      <Setter Property="Height" Value="24" />
      <Setter Property="Margin" Value="0, 0, 16, 0" />
    </Style>

    <Style Selector="^ /template/ Border#PART_MenuItemHighlighter">
      <Setter Property="Opacity" Value="0" />
    </Style>

    <Style Selector="^:not(.Menu):not(:disabled):selected /template/ Border#PART_MenuItemHighlighter">
      <Setter Property="Opacity" Value="0.13" />
    </Style>

    <Style Selector="^:not(.Menu):disabled">
      <Setter Property="Opacity" Value="0.56" />
    </Style>

    <Style Selector="^:empty /template/ Path#PART_RightArrow">
      <Setter Property="IsVisible" Value="False" />
    </Style>

    <Style Selector="^:separator">
      <Setter Property="Height" Value="NaN" />
      <Setter Property="Template">
        <ControlTemplate>
          <Separator Foreground="{DynamicResource MaterialDividerBrush}"
                     Margin="0, 8"
                     Height="1" />
        </ControlTemplate>
      </Setter>
    </Style>
  </ControlTheme>

  <!-- Default style -->
  <ControlTheme x:Key="{x:Type MenuItem}" TargetType="MenuItem"
                BasedOn="{StaticResource MaterialMenuItem}" />
</ResourceDictionary>

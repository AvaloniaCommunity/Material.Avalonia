<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:viewModels="clr-namespace:Material.Demo.ViewModels"
             xmlns:dialogHost="clr-namespace:DialogHost;assembly=DialogHost.Avalonia"
             xmlns:models="clr-namespace:Material.Demo.Models"
             x:Class="Material.Demo.Pages.DialogDemo"
             x:DataType="viewModels:DialogDemoViewModel">
    <UserControl.Resources>
        <StackPanel x:Key="Sample2View">
            <ProgressBar Classes="Circle" IsIndeterminate="True" />
            <Button Margin="0 16 0 0"
                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=dialogHost:DialogHost}, Path=CloseDialogCommand}">
                CLOSE
            </Button>
        </StackPanel>
    </UserControl.Resources>
    <!--dialogHost:DialogHost Identifier="MainDialogHost">
        <dialogHost:DialogHost.DialogContentTemplate>
            <DataTemplate DataType="models:Sample2Model">
                <StackPanel>
                    <TextBlock TextAlignment="Center">Your lucky number:</TextBlock>
                    <TextBlock Classes="Body1"
                               TextAlignment="Center"
                               Text="{Binding Number}" />
                    <Button Margin="0 8 0 0"
                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=dialogHost:DialogHost}, Path=CloseDialogCommand}">
                        THANKS, CLOSE
                    </Button>
                </StackPanel>
            </DataTemplate>
        </dialogHost:DialogHost.DialogContentTemplate>
        <StackPanel Margin="16, 0">
            <TextBlock Classes="Headline4 Subheadline" Text="Dialogs" />

            <WrapPanel>
                <WrapPanel.Styles>
                    <Style Selector="WrapPanel > StackPanel">
                        <Setter Property="Width" Value="300" />
                        <Setter Property="MinHeight" Value="300" />
                    </Style>
                    <Style Selector="WrapPanel > StackPanel > StackPanel">
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Margin" Value="8" />
                    </Style>
                    <Style Selector="WrapPanel > StackPanel > StackPanel > StackPanel">
                        <Setter Property="Margin" Value="8" />
                    </Style>
                </WrapPanel.Styles>
                <StackPanel>
                    <TextBlock Classes="Headline6 Subheadline2" Text="From DialogHost" />
                    <StackPanel>
                        <TextBlock TextWrapping="Wrap"
                                   Text="Top level dialog with custom corner radius, using OpenDialog, passing content via the Parameter. You can pass a view model, provided a corresponding DataTemplate can be found in the scope of the root DialogHost."/>
                        <StackPanel Margin="8 8 8 0">
                            <Button Click="OpenDialogWithView">PASS VIEW</Button>
                            <Button Click="OpenDialogWithModel">PASS MODEL</Button>
                            <Button Click="OpenMoreDialogHostExamples">MORE EXAMPLES</Button>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
                <StackPanel>
                    <TextBlock Classes="Headline6 Subheadline2" Text="Standalone dialog" />

                    <ItemsControl Items="{CompiledBinding StandaloneDialogItems}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="viewModels:DialogDemoItemViewModel">
                                <DockPanel Margin="8">
                                    <Button DockPanel.Dock="Top"
                                            Content="{CompiledBinding Header}"
                                            Command="{CompiledBinding Command}" />
                                    <TextBlock Margin="8"
                                               HorizontalAlignment="Center"
                                               TextWrapping="Wrap"

                                               DockPanel.Dock="Bottom"

                                               Text="{CompiledBinding Result}"
                                               IsVisible="{CompiledBinding Result,
                                                 Converter={x:Static StringConverters.IsNotNullOrEmpty},
                                                 FallbackValue=False}" />
                                </DockPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </WrapPanel>
        </StackPanel>
    </dialogHost:DialogHost -->
    
    <StackPanel>
        <StackPanel>
            <TextBlock Classes="Headline6 Subheadline2" Text="Standalone dialog" />

            <ItemsControl Items="{CompiledBinding StandaloneDialogItems}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="viewModels:DialogDemoItemViewModel">
                        <DockPanel Margin="8">
                            <Button DockPanel.Dock="Top"
                                    Classes="flat"
                                    Content="{CompiledBinding Header}"
                                    Command="{CompiledBinding Command}" />
                            <TextBlock Margin="8"
                                       HorizontalAlignment="Center"
                                       TextWrapping="Wrap"

                                       DockPanel.Dock="Bottom"

                                       Text="{CompiledBinding Result}"
                                       IsVisible="{CompiledBinding Result,
                                                 Converter={x:Static StringConverters.IsNotNullOrEmpty},
                                                 FallbackValue=False}" />
                        </DockPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </StackPanel>
</UserControl>
<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ripple="clr-namespace:Material.Ripple;assembly=Material.Ripple"
        xmlns:collections="clr-namespace:Avalonia.Collections;assembly=Avalonia.Controls.DataGrid">
  <!--TODO: Validation and Focus-->

  <Styles.Resources>
    <Thickness x:Key="DataGridTextColumnCellTextBlockMargin">0</Thickness>
    
    <ControlTheme x:Key="DataGridCellTextBlockTheme" TargetType="TextBlock">
      <Setter Property="VerticalAlignment" Value="Center" />
    </ControlTheme>
    
    <!-- <ControlTheme x:Key="DataGridCellTextBoxTheme" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}"> -->
    <!--   <Setter Property="VerticalAlignment" Value="Stretch" /> -->
    <!--   <Setter Property="Background" Value="Transparent" /> -->
    <!--   <Style Selector="^ /template/ DataValidationErrors"> -->
    <!--     <Setter Property="Theme" Value="{StaticResource TooltipDataValidationErrors}" /> -->
    <!--   </Style> -->
    <!-- </ControlTheme> -->

    <!-- Theme for the Expander Button used in Row Group Headers -->
    <ControlTheme x:Key="MaterialDataGridExpanderButtonTheme" TargetType="ToggleButton">
      <Setter Property="Cursor" Value="Hand" />
      <Setter Property="Focusable" Value="False" />
      <Setter Property="CornerRadius" Value="16" />
      <Setter Property="Width" Value="24" />
      <Setter Property="Height" Value="24" />
      <Setter Property="Margin" Value="4,0,0,0" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate>
            <Border Background="Transparent"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    ClipToBounds="True">
              <ripple:RippleEffect Name="PART_Ripple"
                                   RippleFill="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}">
                <Panel Name="PART_InnerPanel" Width="24" Height="24">
                  <Path Data="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z"
                        Name="ExpandPath"
                        Fill="{TemplateBinding Foreground}"
                        Stroke="{TemplateBinding Foreground}" />
                </Panel>
              </ripple:RippleEffect>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>

      <Style Selector="^ /template/ Panel#PART_InnerPanel">
        <Setter Property="RenderTransform" Value="rotate(0deg)" />
      </Style>

      <Style Selector="^:not(.no-transitions) /template/ Panel#PART_InnerPanel">
        <Setter Property="Transitions">
          <Transitions>
            <TransformOperationsTransition Duration="0:0:0.25" Property="RenderTransform" Easing="CircularEaseOut" />
          </Transitions>
        </Setter>
      </Style>

      <!-- Rotate the arrow to 45 degrees when group expanded -->
      <Style Selector="^:checked /template/ Panel#PART_InnerPanel">
        <Setter Property="RenderTransform" Value="rotate(45deg)" />
      </Style>
    </ControlTheme>

    <!-- DataGridCell Theme -->
    <ControlTheme x:Key="{x:Type DataGridCell}" TargetType="DataGridCell">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
      <Setter Property="VerticalContentAlignment" Value="Stretch" />
      <Setter Property="Padding" Value="16,0" />
      <Setter Property="Template">
        <ControlTemplate>
          <Grid ColumnDefinitions="*,Auto"
                Background="{TemplateBinding Background}">
            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                              Content="{TemplateBinding Content}"
                              Margin="{TemplateBinding Padding}"
                              TextBlock.Foreground="{TemplateBinding Foreground}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </ControlTemplate>
      </Setter>
    </ControlTheme>

    <!-- DataGridColumnHeader Theme -->
    <ControlTheme x:Key="{x:Type DataGridColumnHeader}" TargetType="DataGridColumnHeader">
      <Setter Property="MinHeight" Value="56" />
      <Setter Property="Foreground" Value="{DynamicResource MaterialColumnHeaderBrush}" />
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="SeparatorBrush" Value="{DynamicResource MaterialDividerBrush}" />
      <Setter Property="Padding" Value="16,0" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Template">
        <ControlTemplate>
          <Grid ColumnDefinitions="*,Auto"
                Background="{TemplateBinding Background}">

            <Grid ColumnDefinitions="*,Auto"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  Margin="{TemplateBinding Padding}">
              <ContentPresenter Content="{TemplateBinding Content}" />

              <Path Name="SortIcon"
                    Grid.Column="1"
                    Fill="{TemplateBinding Foreground}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Stretch="Uniform"
                    Width="8"
                    Margin="4,0,0,0"
                    Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z " />
            </Grid>

            <Rectangle Name="VerticalSeparator"
                       Grid.Column="1" Width="2" Height="14"
                       VerticalAlignment="Stretch"
                       Fill="{TemplateBinding SeparatorBrush}"
                       IsVisible="{TemplateBinding AreSeparatorsVisible}" />
          </Grid>
        </ControlTemplate>
      </Setter>

      <Style Selector="^:dragIndicator">
        <Setter Property="Opacity" Value="0.5" />
      </Style>

      <Style Selector="^ /template/ Path#SortIcon">
        <Setter Property="IsVisible" Value="False" />
        <Setter Property="RenderTransform">
          <Setter.Value>
            <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
          </Setter.Value>
        </Setter>
      </Style>

      <Style Selector="^:sortascending /template/ Path#SortIcon">
        <Setter Property="IsVisible" Value="True" />
      </Style>

      <Style Selector="^:sortdescending /template/ Path#SortIcon">
        <Setter Property="IsVisible" Value="True" />
        <Setter Property="RenderTransform">
          <Setter.Value>
            <ScaleTransform ScaleX="0.9" ScaleY="-0.9" />
          </Setter.Value>
        </Setter>
      </Style>
    </ControlTheme>

    <!-- DataGridRow Theme -->
    <ControlTheme x:Key="{x:Type DataGridRow}" TargetType="DataGridRow">
      <Setter Property="Background" Value="{Binding $parent[DataGrid].RowBackground}" />
      <Setter Property="Template">
        <ControlTemplate>
          <Border x:Name="RowBorder"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="{TemplateBinding CornerRadius}">
            <DataGridFrozenGrid Name="PART_Root"
                                MinHeight="52"
                                RowDefinitions="*,Auto,Auto"
                                ColumnDefinitions="Auto,*">

              <Rectangle Name="BackgroundRectangle" Grid.RowSpan="2" Grid.ColumnSpan="2" />

              <DataGridRowHeader Grid.RowSpan="3" Name="PART_RowHeader" DataGridFrozenGrid.IsFrozen="True" />
              <DataGridCellsPresenter Grid.Column="1" Name="PART_CellsPresenter" DataGridFrozenGrid.IsFrozen="True" />
              <DataGridDetailsPresenter Grid.Row="1" Grid.Column="1" Name="PART_DetailsPresenter" />
              <Rectangle Grid.Row="2" Grid.Column="1" Margin="0"
                         VerticalAlignment="Bottom" Height="1" Name="PART_BottomGridLine"
                         HorizontalAlignment="Stretch" />
            </DataGridFrozenGrid>
          </Border>
        </ControlTemplate>
      </Setter>

      <Style Selector="^ /template/ Rectangle#BackgroundRectangle">
        <Setter Property="IsVisible" Value="False" />
        <Setter Property="Fill" Value="{DynamicResource MaterialSelectionBrush}" />
      </Style>

      <Style Selector="^:pointerover /template/ Rectangle#BackgroundRectangle">
        <Setter Property="IsVisible" Value="True" />
        <Setter Property="Opacity" Value="0.5" />
      </Style>

      <Style Selector="^:selected /template/ Rectangle#BackgroundRectangle">
        <Setter Property="IsVisible" Value="True" />
        <Setter Property="Opacity" Value="1" />
      </Style>

      <!-- <Style Selector="^:selected">
            <Setter Property="Foreground" Value="{DynamicResource MaterialSelectionBrush}" />
        </Style> -->
    </ControlTheme>

    <!-- DataGridRowHeader Theme -->
    <ControlTheme x:Key="{x:Type DataGridRowHeader}" TargetType="DataGridRowHeader">
      <Setter Property="Template">
        <ControlTemplate>
          <Grid Name="PART_Root"
                RowDefinitions="*,*,Auto"
                ColumnDefinitions="Auto,*" />
        </ControlTemplate>
      </Setter>
    </ControlTheme>

    <!-- DataGridRowGroupHeader Theme -->
    <ControlTheme x:Key="{x:Type DataGridRowGroupHeader}" TargetType="DataGridRowGroupHeader">
      <Setter Property="Background" Value="{DynamicResource ThemeControlMidHighBrush}" />
      <Setter Property="Template">
        <ControlTemplate>
          <DataGridFrozenGrid Name="Root"
                              Background="{TemplateBinding Background}"
                              MinHeight="52"
                              ColumnDefinitions="Auto,Auto,Auto,Auto"
                              RowDefinitions="Auto,*,Auto">

            <Rectangle Grid.Column="1" Grid.Row="1" Name="PART_IndentSpacer" />
            <!-- Apply the specific theme for the expander button -->
            <ToggleButton Grid.Column="2" Grid.Row="1" Name="PART_ExpanderButton" Margin="2,0,0,0"
                          Theme="{StaticResource MaterialDataGridExpanderButtonTheme}" />

            <StackPanel Grid.Column="3" Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="0,1,0,1">
              <TextBlock Name="PART_PropertyNameElement" Margin="4,0,0,0" IsVisible="{TemplateBinding IsPropertyNameVisible}" />
              <TextBlock Margin="4,0,0,0" Text="{Binding Key, DataType=collections:DataGridCollectionViewGroup}" />
              <TextBlock Name="PART_ItemCountElement" Margin="4,0,0,0" IsVisible="{TemplateBinding IsItemCountVisible}" />
            </StackPanel>

            <DataGridRowHeader Name="RowHeader" Grid.RowSpan="3" DataGridFrozenGrid.IsFrozen="True" />

          </DataGridFrozenGrid>
        </ControlTemplate>
      </Setter>
    </ControlTheme>

    <!-- DataGrid Theme -->
    <ControlTheme x:Key="{x:Type DataGrid}" TargetType="DataGrid">
      <Setter Property="RowBackground" Value="Transparent" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="HeadersVisibility" Value="Column" />
      <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
      <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
      <Setter Property="SelectionMode" Value="Extended" />
      <Setter Property="GridLinesVisibility" Value="Horizontal" />
      <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource MaterialDividerBrush}" />
      <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource MaterialDividerBrush}" />
      <Setter Property="BorderBrush" Value="{DynamicResource MaterialBodyBrush}" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="DropLocationIndicatorTemplate">
        <Template>
          <Rectangle Fill="{DynamicResource MaterialSelectionBrush}" Width="2" />
        </Template>
      </Setter>
      <Setter Property="Template">
        <ControlTemplate>
          <Border Background="{TemplateBinding Background}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  CornerRadius="4">
            <Grid RowDefinitions="Auto,*,Auto,Auto" ColumnDefinitions="Auto,*,Auto">

              <DataGridColumnHeader Name="PART_TopLeftCornerHeader" Width="22" />
              <DataGridColumnHeadersPresenter Name="PART_ColumnHeadersPresenter" Grid.Column="1" />

              <Separator Grid.ColumnSpan="3" Margin="0"
                         VerticalAlignment="Bottom" Height="1"
                         Background="{TemplateBinding BorderBrush}" />

              <DataGridRowsPresenter Name="PART_RowsPresenter" Grid.ColumnSpan="2" Grid.Row="1">
                <DataGridRowsPresenter.GestureRecognizers>
                  <ScrollGestureRecognizer CanHorizontallyScroll="True" CanVerticallyScroll="True" />
                </DataGridRowsPresenter.GestureRecognizers>
              </DataGridRowsPresenter>
              <Rectangle Name="PART_BottomRightCorner" Fill="{DynamicResource ThemeControlMidHighBrush}" Grid.Column="2" Grid.Row="2" />
              <Rectangle Name="BottomLeftCorner" Fill="{DynamicResource ThemeControlMidHighBrush}" Grid.Row="2" Grid.ColumnSpan="2" />
              <ScrollBar Name="PART_VerticalScrollbar" Classes="Modern"
                         Orientation="Vertical" Grid.Column="2" Grid.Row="1" />

              <Grid Grid.Column="1" Grid.Row="2"
                    ColumnDefinitions="Auto,*">
                <Rectangle Name="PART_FrozenColumnScrollBarSpacer" />
                <ScrollBar Name="PART_HorizontalScrollbar" Grid.Column="1"
                           Classes="Modern" Orientation="Horizontal" />
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter>

      <Style Selector="^ /template/ ScrollBar">
        <Setter Property="Theme" Value="{StaticResource MaterialModernScrollBar}" />
      </Style>

      <!-- Template for classic scrollbars -->
      <Style Selector="^.ClassicScrollBar /template/ ScrollBar">
        <Setter Property="Theme" Value="{StaticResource MaterialScrollBar}" />
      </Style>

      <Style Selector="^.DisableHoveringScrollBar /template/ ScrollBar">
        <Setter Property="Margin" Value="0" />
        <Style Selector="^:horizontal">
          <Setter Property="Height" Value="{DynamicResource ScrollBarThickness}" />
        </Style>
        <Style Selector="^:vertical">
          <Setter Property="Height" Value="{DynamicResource ScrollBarThickness}" />
        </Style>
      </Style>
    </ControlTheme>
  </Styles.Resources>
</Styles>